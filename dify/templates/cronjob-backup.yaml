{{- if not .Values.backup.restore }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "dify.fullname" . }}-backup
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "dify.labels" . | nindent 4 }}
    role: backup
spec:
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "dify.selectorLabels" . | nindent 12 }}
            role: backup
          {{- with .Values.podAnnotations }}
          annotations: {{ toYaml . | nindent 12 }}
          {{- end }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets: {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "dify.serviceAccountName" . }}
          securityContext: {{- toYaml .Values.podSecurityContext | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations: {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ .Values.backup.cronjob.restartPolicy | default "OnFailure" }}
          containers:
            - name: postgresql-backup
              image: "phntom/postgresql-backup-s3:{{ .Values.backup.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
              env:
                - name: POSTGRES_DATABASE
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: DB_DATABASE
                - name: PGHOST
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: DB_HOST
                - name: PGPORT
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: DB_PORT
                - name: PGUSER
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: DB_USERNAME
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.secretName }}
                      key: DB_PASSWORD
                - name: POSTGRES_EXTRA_OPTS
                  value: {{ .Values.backup.postgresql.extraArgs | quote }}
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.secretName }}
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.secretName }}
                      key: AWS_SECRET_ACCESS_KEY
                - name: S3_BUCKET
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: S3_BUCKET_NAME
                - name: S3_PREFIX
                  value: {{ trimSuffix "/" .Values.backup.s3.prefix | quote }}
                - name: AWS_DEFAULT_REGION
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: S3_REGION
                {{- if .Values.config.s3Endpoint }}
                - name: S3_ENDPOINT
                  value: {{ printf "https://%s" (trimPrefix "https://" .Values.config.s3Endpoint) | quote }}
                {{- end }}
                - name: S3_S3V4
                  value: {{ ternary "yes" "no" .Values.backup.s3.v4signature | quote }}
                {{- if .Values.backup.encryption.enabled }}
                - name: ENCRYPTION_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.secretName }}
                      key: ENCRYPTION_PASSWORD
                {{- end }}
              resources: {{- toYaml .Values.backup.resources | nindent 16 }}
              securityContext: {{- toYaml .Values.securityContext | nindent 16 }}
            - name: weaviate-backup
              image: "alpine/curl"
              imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
              env:
                - name: WEAVIATE_ENDPOINT
                  valueFrom:
                    configMapKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.configName }}
                      key: WEAVIATE_ENDPOINT
                - name: RELEASE_NAME
                  value: {{ .Release.Name }}
                - name: WEAVIATE_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ default (include "dify.fullname" .) .Values.global.dify.secretName }}
                      key: WEAVIATE_API_KEY
              command:
                - /bin/sh
              args:
                - -c
                - |-
                  set -e
                  curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${WEAVIATE_API_KEY}" -d "{\"id\":\"${RELEASE_NAME}_$(date +'b%Y%m%dt%H%M%Sz')\"}" "${WEAVIATE_ENDPOINT}/v1/backups/gcs" | grep STARTED
              resources: {{- toYaml .Values.backup.resources | nindent 16 }}
              securityContext: {{- toYaml .Values.securityContext | nindent 16 }}
  schedule: {{ .Values.backup.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: {{ .Values.backup.cronjob.successfulJobsHistoryLimit | default 1 }}
  failedJobsHistoryLimit: {{ .Values.backup.cronjob.failedJobsHistoryLimit | default 1 }}
  concurrencyPolicy: {{ .Values.backup.cronjob.concurrencyPolicy | default "Forbid" | quote }}
{{- end }}
